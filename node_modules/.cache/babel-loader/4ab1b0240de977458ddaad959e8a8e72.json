{"ast":null,"code":"import _slicedToArray from\"C:/Users/mait\\xEA/Awesomefolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,Suspense}from\"react\";import{ThemeProvider}from\"@material-ui/styles\";import{darkTheme,lightTheme}from\"./assets/theme\";import CssBaseline from\"@material-ui/core/CssBaseline\";import\"./App.css\";import ScrollToTop from\"./components/ScrollToTop\";import{BrowserRouter as Router}from\"react-router-dom\";import Routes from\"./Routes\";import ThemeContext from\"./contexts/themeContext\";import LoaderContext from\"./contexts/loaderContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDarkMode=_useState2[0],setIsDarkMode=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];useEffect(function(){if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){setIsDarkMode(true);}else{setIsDarkMode(false);}},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{}),children:/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDarkMode:isDarkMode,setIsDarkMode:setIsDarkMode},children:/*#__PURE__*/_jsx(LoaderContext.Provider,{value:{isLoading:isLoading,setIsLoading:setIsLoading},children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:isDarkMode?darkTheme:lightTheme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(ScrollToTop,{}),/*#__PURE__*/_jsx(Routes,{})]})})})})});}export default App;","map":{"version":3,"sources":["C:/Users/maitÃª/Awesomefolio/src/App.js"],"names":["useState","useEffect","Suspense","ThemeProvider","darkTheme","lightTheme","CssBaseline","ScrollToTop","BrowserRouter","Router","Routes","ThemeContext","LoaderContext","App","isDarkMode","setIsDarkMode","isLoading","setIsLoading","window","matchMedia","matches"],"mappings":"iHAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,gBAAtC,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,KAAwC,kBAAxC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACX,cAAoCb,QAAQ,CAAC,KAAD,CAA5C,wCAAOc,UAAP,eAAmBC,aAAnB,eACA,eAAkCf,QAAQ,CAAC,IAAD,CAA1C,yCAAOgB,SAAP,eAAkBC,YAAlB,eACAhB,SAAS,CAAC,UAAM,CACZ,GAAIiB,MAAM,CAACC,UAAP,EAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA3E,CAAoF,CAChFL,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,IAEO,CACHA,aAAa,CAAC,KAAD,CAAb,CACH,CACJ,CANQ,CAMN,EANM,CAAT,CAOA,mBACI,KAAC,MAAD,wBACI,KAAC,QAAD,EAAU,QAAQ,cAAE,cAApB,uBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAED,UAAU,CAAVA,UAAF,CAAcC,aAAa,CAAbA,aAAd,CAA9B,uBACI,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAE,CAAEC,SAAS,CAATA,SAAF,CAAaC,YAAY,CAAZA,YAAb,CAA/B,uBACI,MAAC,aAAD,EAAe,KAAK,CAAEH,UAAU,CAAGV,SAAH,CAAeC,UAA/C,wBACI,KAAC,WAAD,IADJ,cAEI,KAAC,WAAD,IAFJ,cAGI,KAAC,MAAD,IAHJ,GADJ,EADJ,EADJ,EADJ,EADJ,CAeH,CAED,cAAeQ,CAAAA,GAAf","sourcesContent":["import { useState, useEffect, Suspense } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { darkTheme, lightTheme } from \"./assets/theme\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport \"./App.css\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\nimport ThemeContext from \"./contexts/themeContext\";\r\nimport LoaderContext from \"./contexts/loaderContext\";\r\n\r\nfunction App() {\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n            setIsDarkMode(true);\r\n        } else {\r\n            setIsDarkMode(false);\r\n        }\r\n    }, []);\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<div></div>}>\r\n                <ThemeContext.Provider value={{ isDarkMode, setIsDarkMode }}>\r\n                    <LoaderContext.Provider value={{ isLoading, setIsLoading }}>\r\n                        <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n                            <CssBaseline />\r\n                            <ScrollToTop />\r\n                            <Routes />\r\n                        </ThemeProvider>\r\n                    </LoaderContext.Provider>\r\n                </ThemeContext.Provider>\r\n            </Suspense>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}