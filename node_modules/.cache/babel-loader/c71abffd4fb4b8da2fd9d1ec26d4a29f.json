{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mait\\xEA\\\\Awesomefolio\\\\src\\\\components\\\\ProjectsGallery\\\\ProjectsGallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport Card from \"./Card\";\nimport ExtendedCard from \"./ExtendedCard\";\nimport { projectList } from \"../../data\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectsGallery = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const [selectedId, setSelectedId] = useState(null);\n\n  const getSelected = id => projectList.find(elem => elem.id === id);\n\n  return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n    type: \"crossfade\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      className: classes.galleryContainer,\n      children: projectList.map((item, k) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        classes: {\n          item: classes.item\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          id: item.id,\n          title: item.title,\n          overview: t(`projects_${item.id}_overview`),\n          backgroundImage: item.backgroundImage,\n          frontImage: item.frontImage,\n          technologies: item.technologies,\n          onClick: () => setSelectedId(item.id),\n          initial: {\n            opacity: 0,\n            y: -50\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedId && /*#__PURE__*/_jsxDEV(ExtendedCard, {\n        id: selectedId,\n        title: getSelected(selectedId).title,\n        overview: t(`projects_${selectedId}_extended_overview`),\n        backgroundImage: getSelected(selectedId).backgroundImage,\n        frontImage: getSelected(selectedId).frontImage,\n        technologies: getSelected(selectedId).technologies,\n        handleClose: () => setSelectedId(null)\n      }, selectedId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectsGallery, \"SvDonIUU7u7GAk/IHilUmYn6z/c=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = ProjectsGallery;\nconst useStyles = makeStyles(theme => ({\n  galleryContainer: {\n    overflow: \"visible\",\n    width: \"100%\",\n    margin: \"0 auto\"\n  },\n  item: {\n    overflow: \"visible\"\n  }\n}));\nexport default ProjectsGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsGallery\");","map":{"version":3,"sources":["C:/Users/maitÃª/Awesomefolio/src/components/ProjectsGallery/ProjectsGallery.js"],"names":["React","useState","AnimatePresence","AnimateSharedLayout","Grid","makeStyles","Card","ExtendedCard","projectList","useTranslation","ProjectsGallery","classes","useStyles","t","selectedId","setSelectedId","getSelected","id","find","elem","galleryContainer","map","item","k","title","backgroundImage","frontImage","technologies","opacity","y","theme","overflow","width","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { AnimatePresence, AnimateSharedLayout} from \"framer-motion\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport Card from \"./Card\";\r\nimport ExtendedCard from \"./ExtendedCard\";\r\nimport { projectList } from \"../../data\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProjectsGallery = () => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation()\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    const getSelected = (id) => projectList.find((elem) => elem.id === id);\r\n    return (\r\n        <AnimateSharedLayout type=\"crossfade\">\r\n            <Grid container  spacing={4} className={classes.galleryContainer}>\r\n                {projectList.map((item, k) => (\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={4}\r\n                        key={item.id}\r\n                        classes={{ item: classes.item }}\r\n                        >\r\n                        <Card\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            overview={t(`projects_${item.id}_overview`)}\r\n                            backgroundImage={item.backgroundImage}\r\n                            frontImage={item.frontImage}\r\n                            technologies={item.technologies}\r\n                            onClick={() => setSelectedId(item.id)}\r\n                            initial={{ opacity: 0, y: -50 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <AnimatePresence>\r\n                {selectedId && (\r\n                    <ExtendedCard\r\n                        key={selectedId}\r\n                        id={selectedId}\r\n                        title={getSelected(selectedId).title}\r\n                        overview={t(`projects_${selectedId}_extended_overview`)}\r\n                        backgroundImage={getSelected(selectedId).backgroundImage}\r\n                        frontImage={getSelected(selectedId).frontImage}\r\n                        technologies={getSelected(selectedId).technologies}\r\n                        handleClose={() => setSelectedId(null)}\r\n                    />\r\n                )}\r\n            </AnimatePresence>\r\n        </AnimateSharedLayout>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    galleryContainer: {\r\n        overflow: \"visible\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\"\r\n    },\r\n    item: {\r\n        overflow: \"visible\",\r\n    },\r\n}));\r\n\r\nexport default ProjectsGallery;\r\n"]},"metadata":{},"sourceType":"module"}