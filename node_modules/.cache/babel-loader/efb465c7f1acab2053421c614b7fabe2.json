{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mait\\xEA\\\\Awesomefolio\\\\src\\\\components\\\\MessageBox\\\\MessageBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, Container, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport emailjs from \"emailjs-com\";\nimport * as Yup from \"yup\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport Check from \"../../assets/images/Check\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageBox = () => {\n  _s();\n\n  const classes = useStyles();\n  const [sending, setSending] = useState(false);\n  const [sendEmailSuccess, setSendEmailSuccess] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const SendEmail = object => {\n    setSending(true);\n    emailjs.send(\"service_z8jqn8p\", \"template_161qd6p\", object, \"Y__qMu3_BJ_t8yAzFbJX8\").then(result => {\n      setSendEmailSuccess(true);\n      setSending(false);\n    }, error => {\n      setSending(false);\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Nome requerido\"),\n      email: Yup.string().email(\"Endreço de e-mail inválido\").required(\"Endreço de e-mail é requerido\"),\n      message: Yup.string().required(\"Por favor, digite uma mensagem\")\n    }),\n    onSubmit: values => {\n      SendEmail(values);\n      setSendEmailSuccess(true);\n    },\n    validateOnChange: false,\n    validateOnBlur: false\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      overflow: \"hidden\",\n      style: {\n        position: \"relative\",\n        minHeight: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: !sendEmailSuccess && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(formik.touched.name && formik.errors.name),\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.name,\n            helperText: formik.touched.name && formik.errors.name,\n            variant: \"filled\",\n            margin: \"normal\",\n            type: \"text\",\n            fullWidth: true,\n            id: \"name\",\n            label: t('contact_full_name'),\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(formik.touched.email && formik.errors.email),\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.email,\n            helperText: formik.touched.email && formik.errors.email,\n            variant: \"filled\",\n            type: \"email\",\n            margin: \"normal\",\n            fullWidth: true,\n            id: \"email\",\n            label: t('contact_email'),\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(formik.touched.message && formik.errors.message),\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.message,\n            helperText: formik.touched.message && formik.errors.message,\n            variant: \"filled\",\n            margin: \"normal\",\n            fullWidth: true,\n            name: \"message\",\n            label: \"Mensagem\",\n            type: \"text\",\n            id: \"message\",\n            multiline: true,\n            minRows: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.submitBtn,\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: sending,\n              children: t('contact_btn')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: sendEmailSuccess && /*#__PURE__*/_jsxDEV(Box, {\n          component: motion.div,\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            delay: 0.9\n          },\n          style: {\n            position: \"absolute\",\n            top: 0,\n            height: \"100%\",\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            m: 2,\n            children: /*#__PURE__*/_jsxDEV(Check, {\n              width: \"150\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: motion.h4,\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              delay: 1.5,\n              duration: 1\n            },\n            variant: \"body2\",\n            children: \"Your message has been successfully sent, i'll reply as soon as possible.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageBox, \"lzE1t0x/MHXWHWAn4S4gFQxhszY=\", false, function () {\n  return [useStyles, useTranslation, useFormik];\n});\n\n_c = MessageBox;\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: \"100%\" // Fix IE 11 issue.\n\n  },\n  submitBtn: {\n    width: \"200px\"\n  }\n}));\nexport default MessageBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBox\");","map":{"version":3,"sources":["C:/Users/maitê/Awesomefolio/src/components/MessageBox/MessageBox.js"],"names":["React","useState","Box","Button","Container","makeStyles","TextField","Typography","useFormik","emailjs","Yup","AnimatePresence","motion","Check","useTranslation","MessageBox","classes","useStyles","sending","setSending","sendEmailSuccess","setSendEmailSuccess","t","SendEmail","object","send","then","result","error","formik","initialValues","name","email","message","validationSchema","string","required","onSubmit","values","validateOnChange","validateOnBlur","position","minHeight","form","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","submitBtn","div","opacity","delay","top","height","width","display","flexDirection","alignItems","justifyContent","h4","y","duration","theme"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Button, Container, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport emailjs from \"emailjs-com\";\r\nimport * as Yup from \"yup\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport Check from \"../../assets/images/Check\";\r\nimport { useTranslation} from \"react-i18next\"\r\n\r\nconst MessageBox = () => {\r\n    const classes = useStyles();\r\n    const [sending, setSending] = useState(false);\r\n    const [sendEmailSuccess, setSendEmailSuccess] = useState(false);\r\n    const {t} = useTranslation()\r\n    const SendEmail = (object) => {\r\n        setSending(true);\r\n        emailjs.send(\"service_z8jqn8p\", \"template_161qd6p\", object, \"Y__qMu3_BJ_t8yAzFbJX8\").then(\r\n            (result) => {\r\n                setSendEmailSuccess(true);\r\n                setSending(false);\r\n            },\r\n            (error) => {\r\n                setSending(false);\r\n            }\r\n        );\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string().required(\"Nome requerido\"),\r\n            email: Yup.string().email(\"Endreço de e-mail inválido\").required(\"Endreço de e-mail é requerido\"),\r\n            message: Yup.string().required(\"Por favor, digite uma mensagem\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            SendEmail(values);\r\n            setSendEmailSuccess(true);\r\n        },\r\n        validateOnChange: false,\r\n        validateOnBlur: false,\r\n    });\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n\r\n        <Box overflow=\"hidden\" style={{ position: \"relative\", minHeight: \"300px\" }}>\r\n            <AnimatePresence>\r\n                {!sendEmailSuccess && (\r\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                            <TextField\r\n                                error={Boolean(formik.touched.name && formik.errors.name)}\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.name}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label={t('contact_full_name')}\r\n                                name=\"name\"\r\n                            />\r\n                            <TextField\r\n                                error={Boolean(formik.touched.email && formik.errors.email)}\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                                variant=\"filled\"\r\n                                type=\"email\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label={t('contact_email')}\r\n                                name=\"email\"\r\n                            />\r\n                            <TextField\r\n                                error={Boolean(formik.touched.message && formik.errors.message)}\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.message}\r\n                                helperText={formik.touched.message && formik.errors.message}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                name=\"message\"\r\n                                label=\"Mensagem\"\r\n                                type=\"text\"\r\n                                id=\"message\"\r\n                                multiline\r\n                                minRows={5}\r\n                            />\r\n                            <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n                                <Button\r\n                                    className={classes.submitBtn}\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={sending}\r\n                                >\r\n                                    {t('contact_btn')}\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                )}\r\n            </AnimatePresence>\r\n            <AnimatePresence>\r\n                {sendEmailSuccess && (\r\n                    <Box\r\n                        component={motion.div}\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        transition={{ delay: 0.9 }}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Box m={2}>\r\n                            <Check width=\"150\" />\r\n                        </Box>\r\n                        <Typography\r\n                            component={motion.h4}\r\n                            initial={{ opacity: 0, y: 10 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                            transition={{delay:1.5, duration:1}}\r\n                            variant=\"body2\"\r\n                        >\r\n                            Your message has been successfully sent, i'll reply as soon as possible.\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n            </AnimatePresence>\r\n        </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n    },\r\n    submitBtn: {\r\n        width: \"200px\",\r\n    },\r\n}));\r\n\r\nexport default MessageBox;\r\n"]},"metadata":{},"sourceType":"module"}